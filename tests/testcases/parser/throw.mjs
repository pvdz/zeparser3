/**
 * @generated This file is auto-regenerated by the test runner, and auto-formatted by Prettier
 * @format
 **/


import {
  $ASI,
  $COMMENT,
  $COMMENT_HTML,
  $COMMENT_SINGLE,
  $COMMENT_MULTI,
  $CRLF,
  $EOF,
  $ERROR,
  $IDENT,
  $NL,
  $NUMBER,
  $NUMBER_HEX,
  $NUMBER_DEC,
  $NUMBER_BIN,
  $NUMBER_OCT,
  $NUMBER_OLD,
  $PUNCTUATOR,
  $REGEX,
  $REGEXU,
  $SPACE,
  $STRING,
  $STRING_DOUBLE,
  $STRING_SINGLE,
  $TAB,
  $TICK,
  $TICK_BAD_ESCAPE,
  $TICK_BODY,
  $TICK_HEAD,
  $TICK_PURE,
  $TICK_TAIL,
  $WHITE,
} from '../../../src/zetokenizer.mjs';

export default (describe, test) =>
  describe('throw statement', _ => {
    test('throw, semi', {
      code: 'throw foo;',
      ast: {
        type: 'Program',
        body: [
          {
            type: 'ThrowStatement',
            argument: {
              type: 'Identifier',
              name: 'foo',
            },
          },
        ],
      },
      tokens: [$IDENT, $IDENT, $PUNCTUATOR],
    });
    test('throw, eof', {
      code: 'throw foo',
      ast: {
        type: 'Program',
        body: [
          {
            type: 'ThrowStatement',
            argument: {
              type: 'Identifier',
              name: 'foo',
            },
          },
        ],
      },
      tokens: [$IDENT, $IDENT, $ASI],
    }); // `throw \n foo` should throw an error since the throw rhs is mandatory
  });
