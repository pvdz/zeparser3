/**
 * @generated This file is auto-regenerated by the test runner, and auto-formatted by Prettier
 * @format
 **/

import {
  $ASI,
  $COMMENT,
  $COMMENT_HTML,
  $COMMENT_SINGLE,
  $COMMENT_MULTI,
  $CRLF,
  $EOF,
  $ERROR,
  $IDENT,
  $NL,
  $NUMBER,
  $NUMBER_HEX,
  $NUMBER_DEC,
  $NUMBER_BIN,
  $NUMBER_OCT,
  $NUMBER_OLD,
  $PUNCTUATOR,
  $REGEX,
  $REGEXU,
  $SPACE,
  $STRING,
  $STRING_DOUBLE,
  $STRING_SINGLE,
  $TAB,
  $TICK,
  $TICK_BAD_ESCAPE,
  $TICK_BODY,
  $TICK_HEAD,
  $TICK_PURE,
  $TICK_TAIL,
  $WHITE,
} from '../../../src/zetokenizer.mjs';

export default (describe, test) =>
  describe('empty statement', _ => {
    test('just a semi', {
      code: ';',
      ast: {
        type: 'Program',
        body: [
          {
            type: 'EmptyStatement',
          },
        ],
      },
      tokens: [$PUNCTUATOR],
    });
    test('just a semi with an empty block', {
      code: '{};',
      ast: {
        type: 'Program',
        body: [
          {
            type: 'BlockStatement',
            body: [],
          },
          {
            type: 'EmptyStatement',
          },
        ],
      },
      tokens: [$PUNCTUATOR, $PUNCTUATOR, $PUNCTUATOR],
    });
    test('just an empty block with a semi', {
      code: ';{}',
      ast: {
        type: 'Program',
        body: [
          {
            type: 'EmptyStatement',
          },
          {
            type: 'BlockStatement',
            body: [],
          },
        ],
      },
      tokens: [$PUNCTUATOR, $PUNCTUATOR, $PUNCTUATOR],
    });
    test('just an empty statement inside a block', {
      code: '{;}',
      ast: {
        type: 'Program',
        body: [
          {
            type: 'BlockStatement',
            body: [
              {
                type: 'EmptyStatement',
              },
            ],
          },
        ],
      },
      tokens: [$PUNCTUATOR, $PUNCTUATOR, $PUNCTUATOR],
    });
  });
